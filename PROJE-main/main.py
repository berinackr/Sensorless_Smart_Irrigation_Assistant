# main.py
from datetime import date
from weather import WeatherAPIClient
from data_manager import DataManager
from model import SoilWaterBalanceModel

def main():
    """
    Ana fonksiyon: KullanÄ±cÄ± girdilerini alÄ±r,
    API'den verileri Ã§eker ve sulama Ã¶nerileri sunar.
    """
    print("ğŸŒ¿ Yapay Zeka Destekli Sulama AsistanÄ±")
    print("---------------------------------------")

    # KullanÄ±cÄ± girdileri
    plant_type = input("Bitki tÃ¼rÃ¼nÃ¼ girin (Ã¶rn: Domates, Biber): ")
    planting_date_str = input("Ekim tarihini girin (YYYY-MM-DD): ")
    planting_date = date.fromisoformat(planting_date_str)
    
    # KullanÄ±cÄ±nÄ±n yetiÅŸtirme ortamÄ±nÄ± belirlemesi
    is_potted = input("YetiÅŸtirme alanÄ± saksÄ± mÄ±? (evet/hayÄ±r): ").lower() == 'evet'
    if is_potted:
        soil_type = input("Toprak tipini girin (Ã¶rn: SaksÄ± TopraÄŸÄ±): ")
        pot_volume_liters = float(input("SaksÄ± hacmini girin (litre): "))
        cultivation_area_m2 = None
    else:
        cultivation_area_m2 = float(input("YetiÅŸtirme alanÄ±nÄ± girin (metrekare): "))
        soil_type = input("Toprak tipini girin (Ã¶rn: TÄ±n, Kumlu TÄ±n, Kil): ")
        pot_volume_liters = None

    # Veri yÃ¶netimini baÅŸlat
    data_manager = DataManager()
    
    # Hava durumu API istemcisini baÅŸlat
    # NOT: Kendi API anahtarÄ±nÄ±zÄ± buraya girmeniz gerekecek
    weather_api = WeatherAPIClient(api_key="YOUR_API_KEY") 

    # Gelecek 7 gÃ¼n iÃ§in tahminleri Ã§ek
    # Enlem ve boylamÄ± kullanÄ±cÄ±dan almanÄ±z veya varsayÄ±lan bir deÄŸer kullanmanÄ±z gerekebilir
    latitude, longitude = 41.0082, 28.9784  # Ã–rn: Ä°stanbul
    try:
        weather_forecast = weather_api.get_forecast(latitude, longitude, days=7)
    except Exception as e:
        print(f"Hava durumu verileri Ã§ekilirken bir hata oluÅŸtu: {e}")
        return

    # Ana sulama modelini baÅŸlat
    model = SoilWaterBalanceModel(data_manager, planting_date, plant_type, 
                                  soil_type, is_potted, cultivation_area_m2, pot_volume_liters)

    # GÃ¼nlÃ¼k sulama Ã¶nerilerini hesapla ve yazdÄ±r
    print("\nğŸ’§ Ã–nÃ¼mÃ¼zdeki GÃ¼nler Ä°Ã§in Sulama ProgramÄ±:")
    print("---------------------------------------")
    
    for day_data in weather_forecast:
        forecast_date = day_data['date']
        et0 = day_data['et0'] # mm
        rainfall = day_data['precipitation'] # mm

        # GÃ¼nlÃ¼k su dengesini gÃ¼ncelle ve sulama Ã¶nerisi al
        recommendation = model.update_and_recommend(forecast_date, et0, rainfall)
        
        print(f"Tarih: {forecast_date}")
        print(f"   Tahmini ETâ‚€: {et0:.2f} mm, YaÄŸÄ±ÅŸ: {rainfall:.2f} mm")
        print(f"   Ã–neri: {recommendation['amount']:.2f} mm ({recommendation['liters']:.2f} litre) su verin.")
        print(f"   Not: {recommendation['message']}")

    # SensÃ¶rsÃ¼z Kalibrasyon iÃ§in kullanÄ±cÄ± geri bildirimi
    print("\nğŸŒ± Model Hassasiyetini ArtÄ±rma: SensÃ¶rsÃ¼z Kalibrasyon")
    print("---------------------------------------")
    feedback = input("BugÃ¼n topraÄŸÄ±nÄ±zÄ±n durumu nasÄ±ldÄ±? (kuru/orta/Ä±slak): ")
    model.calibrate_with_feedback(feedback)

if __name__ == "__main__":
    main()
